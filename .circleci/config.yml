---
# https://rtfm.co.ua/circleci-obzor-continuous-integration-servisa/
# https://circleci.com/orbs/registry/orb/orbss/ansible-ssh#commands-ansible-playbook
# https://circleci.com/docs/2.0/docker-image-tags.json
# https://circleci.com/docs/2.0/sample-config/
# https://circleci.com/docs/2.0/reusing-config/#executor

# TODO. Сделать как-то более компактно, но я пока не знаю как.
# TODO. Test https://raw.githubusercontent.com/neillturner/omnibus-ansible/master/ansible_install.sh
version: 2.1

orbs:
  # orb-ansible-playbook: orbss/ansible-playbook

executors:

  # from-circlci-debian-oldstable:
  #   resource_class: small
  #   docker:
  #     - image: circleci/buildpack-deps:oldstable

  # from-circlci-debian-stable:
  #   resource_class: small
  #   docker:
  #     - image: circleci/buildpack-deps:stable

  # from-circlci-debian-testing:
  #   resource_class: small
  #   docker:
  #     - image: circleci/buildpack-deps:testing

  # from-circlci-ubuntu-16-04:
  #   resource_class: small
  #   docker:
  #     - image: circleci/buildpack-deps:16.04

  # from-circlci-ubuntu-18-04:
  #   resource_class: small
  #   docker:
  #     - image: circleci/buildpack-deps:18.04

  # from-circlci-ubuntu-20-04:
  #   resource_class: small
  #   docker:
  #     - image: circleci/buildpack-deps:20.04

  # from-dockerhub-centos-7:
  #   resource_class: small
  #   docker:
  #     - image: centos:7

  test-bridge:
    resource_class: small
    docker:
      # - image: ubuntu:18.04
      - image: ansible/ansible
      # - image: centos:7
      # - image: centos:8
      # - image: fedora:latest
      # - image: nginx:latest
      - image: rastasheep/ubuntu-sshd:16.04
      # - image: geerlingguy/docker-centos8-ansible

jobs:

  # run-ansible-playbook-test-on-circlci-debian-oldstable:
  #   executor: from-circlci-debian-oldstable
  #   working_directory: ~/.ansible/roles/ansible-role-install-snap
  #   steps:
  #     - checkout
  #     - run:
  #         name: Run Ansible test on "circleci/buildpack-deps:oldstable".
  #         command: |
  #           wget -O - https://raw.githubusercontent.com/neillturner/omnibus-ansible/master/ansible_install.sh | sudo bash
  #           ansible-playbook -i "localhost," -c local tests/test.yml -vvv

  # run-ansible-playbook-test-on-circlci-debian-stable:
  #   executor: from-circlci-debian-stable
  #   working_directory: ~/.ansible/roles/ansible-role-install-snap
  #   steps:
  #     - checkout
  #     - run:
  #         name: Run Ansible test on "circleci/buildpack-deps:stable".
  #         command: |
  #           wget -O - https://raw.githubusercontent.com/neillturner/omnibus-ansible/master/ansible_install.sh | sudo bash
  #           ansible-playbook -i "localhost," -c local tests/test.yml -vvv

  # run-ansible-playbook-test-on-circlci-debian-testing:
  #   executor: from-circlci-debian-testing
  #   working_directory: ~/.ansible/roles/ansible-role-install-snap
  #   steps:
  #     - checkout
  #     - run:
  #         name: Run Ansible test on "circleci/buildpack-deps:testing".
  #         command: |
  #           wget -O - https://raw.githubusercontent.com/neillturner/omnibus-ansible/master/ansible_install.sh | sudo bash
  #           ansible-playbook -i "localhost," -c local tests/test.yml -vvv

  # run-ansible-playbook-test-on-circlci-ubuntu-16-04:
  #   executor: from-circlci-ubuntu-16-04
  #   working_directory: ~/.ansible/roles/ansible-role-install-snap
  #   steps:
  #     - checkout
  #     - run:
  #         name: Run Ansible test on "circleci/buildpack-deps:16.04".
  #         command: |
  #           wget -O - https://raw.githubusercontent.com/neillturner/omnibus-ansible/master/ansible_install.sh | sudo bash
  #           ansible-playbook -i "localhost," -c local tests/test.yml -vvv

  # run-ansible-playbook-test-on-circlci-ubuntu-18-04:
  #   executor: from-circlci-ubuntu-18-04
  #   working_directory: ~/.ansible/roles/ansible-role-install-snap
  #   steps:
  #     - checkout
  #     - run:
  #         name: Run Ansible test on "circleci/buildpack-deps:18.04".
  #         command: |
  #           # wget -O - https://raw.githubusercontent.com/neillturner/omnibus-ansible/master/ansible_install.sh | sudo bash
  #           ansible-playbook -i "localhost," -c local tests/test.yml -vvv

  # run-ansible-playbook-test-on-circlci-ubuntu-20-04:
  #   executor: from-circlci-ubuntu-20-04
  #   working_directory: ~/.ansible/roles/ansible-role-install-snap
  #   steps:
  #     - checkout
  #     - run:
  #         name: Run Ansible test on "circleci/buildpack-deps:20.04".
  #         command: |
  #           wget -O - https://raw.githubusercontent.com/neillturner/omnibus-ansible/master/ansible_install.sh | sudo bash
  #           ansible-playbook -i "localhost," -c local tests/test.yml -vvv

  # run-ansible-playbook-test-on-dockerhub-centos-7:
  #   executor: from-dockerhub-centos-7
  #   working_directory: ~/.ansible/roles/ansible-role-install-snap
  #   steps:
  #     - checkout
  #     - run:
  #         name: Run Ansible test on "dockerhub-centos-7".
  #         command: |
  #           yum -y install wget sudo
  #           wget -O - https://raw.githubusercontent.com/neillturner/omnibus-ansible/master/ansible_install.sh | sudo bash
  #           ansible-playbook -i "localhost," -c local tests/test.yml -vvv

# https://circleci.com/docs/2.0/executor-types/#using-multiple-docker-images
  run-test-bridge:
    executor: test-bridge
    working_directory: ~/.ansible/roles/ansible-role-install-snap
    steps:
      - checkout
      - run:
          name: Run 2 containers 4 test local network v2
          command: |
            ansible-playbook -i "localhost," -c local tests/test.yml -vvv


workflows:
  simple-run-test:
    jobs:
      # - run-ansible-playbook-test-on-circlci-debian-oldstable
      # - run-ansible-playbook-test-on-circlci-debian-stable
      # - run-ansible-playbook-test-on-circlci-debian-testing
      # - run-ansible-playbook-test-on-circlci-ubuntu-16-04
      # - run-ansible-playbook-test-on-circlci-ubuntu-18-04
      # - run-ansible-playbook-test-on-circlci-ubuntu-20-04
      # - run-ansible-playbook-test-on-dockerhub-centos-7
      - run-test-bridge
